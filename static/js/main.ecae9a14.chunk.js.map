{"version":3,"sources":["redux/actions.js","conponents/ContactForm.js","conponents/Filter.js","conponents/ContactList.js","App.js","redux/store.js","index.js"],"names":["addContact","createAction","delContact","filterContact","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","items","find","item","alert","onSubmit","this","style","width","padding","border","type","onChange","React","Component","connect","contacts","dispatch","actions","textFilter","filter","display","onDelete","normalizeSearchItem","toLowerCase","visibleContacts","includes","map","onClick","marginLeft","App","className","textAlign","margin","persistConfig","key","storage","itemsReduсer","createReducer","action","payload","filterReduсer","_","contactsReduсer","combineReducers","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ecae9a14.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('APP/ADD_CONTACT');\r\nexport const delContact = createAction('APP/DELETE_CONTACT');\r\nexport const filterContact = createAction('APP/FILTER_CONTACT');\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport * as actions from '../redux/actions';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (this.props.items.find(item => item.name === this.state.name)) {\r\n      alert(this.state.name + ' is already in contacts');\r\n    } else {\r\n      this.props.onSubmit(contact);\r\n      this.setState({ name: '', number: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n        style={{\r\n          width: '200px',\r\n          padding: '10px',\r\n          border: '1px solid black',\r\n        }}\r\n      >\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"Submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: item => dispatch(actions.addContact(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\n\r\nconst Filter = ({ textFilter, onChange }) => (\r\n  <label>\r\n    Find contact by name\r\n    <input\r\n      style={{ display: 'block' }}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={textFilter}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({ textFilter: state.contacts.filter });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.filterContact(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\n\r\nconst ContactList = ({ filter, contacts, onDelete }) => {\r\n  const normalizeSearchItem = filter.toLowerCase();\r\n  const visibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeSearchItem),\r\n  );\r\n  return (\r\n    <ul>\r\n      {visibleContacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button onClick={() => onDelete(id)} style={{ marginLeft: '20px' }}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(actions.delContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\nimport ContactForm from './conponents/ContactForm';\nimport Filter from './conponents/Filter';\nimport ContactList from './conponents/ContactList';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\" style={{ textAlign: 'left', margin: '20px' }}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contact</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport {\r\n  createReducer,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { addContact, delContact, filterContact } from './actions';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [\r\n//       { id: 1, name: 'ffff', number: '1111' },\r\n//       { id: 2, name: 'fffd', number: '2222' },\r\n//     ],\r\n//     filter: 'ff',\r\n//   },\r\n// };\r\n\r\n// const itemsInitialState = [\r\n//   { id: 1, name: 'ffff', number: '1111' },\r\n//   { id: 2, name: 'fffd', number: '2222' },\r\n// ];\r\n\r\nconst itemsReduсer = createReducer([], {\r\n  [addContact]: (state, action) => [action.payload, ...state],\r\n  [delContact]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\n\r\nconst filterReduсer = createReducer('', {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReduсer = combineReducers({\r\n  items: itemsReduсer,\r\n  filter: filterReduсer,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReduсer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}